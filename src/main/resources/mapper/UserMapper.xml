<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lhz.blog.blog.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.lhz.blog.blog.pojo.User">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account_id" jdbcType="VARCHAR" property="accountId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="token" jdbcType="CHAR" property="token" />
    <result column="gmt_create" jdbcType="BIGINT" property="gmtCreate" />
    <result column="gmt_modified" jdbcType="BIGINT" property="gmtModified" />
    <result column="bio" jdbcType="VARCHAR" property="bio"/>
    <result column="head_shot_url" jdbcType="VARCHAR" property="headShotUrl"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, account_id, `name`, token, gmt_create, gmt_modified,head_shot_url
  </sql>
  <select id="selectByName" parameterType="string" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from user
    where name = #{name}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByToken" parameterType="string" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/>
    from user
    where token = #{token}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.lhz.blog.blog.pojo.User" useGeneratedKeys="true">
    insert into user (account_id, `name`, token,
      gmt_create, gmt_modified,head_shot_url)
    values (#{accountId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{token,jdbcType=CHAR}, 
      #{gmtCreate,jdbcType=BIGINT}, #{gmtModified,jdbcType=BIGINT},#{headShotUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.lhz.blog.blog.pojo.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        account_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="token != null">
        token,
      </if>
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModified != null">
        gmt_modified,
      </if>
      <if test="headShotUrl != null">
        head_shot_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountId != null">
        #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        #{token,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="headShotUrl != null">
        #{headShotUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lhz.blog.blog.pojo.User">
    update user
    <set>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="token != null">
        token = #{token,jdbcType=CHAR},
      </if>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=BIGINT},
      </if>
      <if test="gmtModified != null">
        gmt_modified = #{gmtModified,jdbcType=BIGINT},
      </if>
      <if test="headShotUrl != null">
        head_shot_url = #{headShotUrl,jdbcType=VARCHAR}
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lhz.blog.blog.pojo.User">
    update user
    set account_id = #{accountId,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      token = #{token,jdbcType=CHAR},
      gmt_create = #{gmtCreate,jdbcType=BIGINT},
      gmt_modified = #{gmtModified,jdbcType=BIGINT},
      head_shot_url = #{headShotUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>